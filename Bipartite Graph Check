// Graph having cycle of odd length is not bipartite
// Back Edge of having nodes of different color shows graph is bipartite
const int N = 1e5 + 5;
vector<int> v[N];
bool visited[N];
bool odd_length;
void dfs(int n, int par, int col)
{
    visited[n] = col;
    for (auto i : v[n])
    {
        if (visited[i] == 0) {
            dfs(i, n, 3 - col);
        }
        // check for back edge
        // Cycle of odd length
        else if (i != par && col == visited[i]) {
            odd_length = 1;
        }
    }
    return;
}
//if(odd_length==1 Graph is not bipartite)
//in main function pass col as 1;
