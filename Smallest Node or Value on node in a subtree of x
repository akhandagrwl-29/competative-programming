const int N = 1e5 + 5;
vector<int> v[N];
int dp[N];
int vertex;
void dfs(int node, int par)
{
	dp[node] = node;
	for (auto cur : v[node]) {

		if (cur != par) {

			dfs(cur, node);
			dp[node] = min(dp[node], dp[cur]);
		}
	}
	return;
}
void solve ()
{
	memset(dp, -1, sizeof(dp));
	cin >> vertex;
	for (int i = 0; i < vertex - 1; i++) {

		int x, y;
		cin >> x >> y;
		v[x].pb(y);
		v[y].pb(x);
	}
	dfs(1, 0);
	for (int i = 1; i <= vertex; i++)
		cout << i << " " << dp[i] << endl;
}
